# coding: utf-8

"""
    Trieve API

    Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.

    The version of the OpenAPI document: 0.11.8
    Contact: developers@trieve.ai
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from trieve_py_client.models.dataset_configuration_dto import DatasetConfigurationDTO

class TestDatasetConfigurationDTO(unittest.TestCase):
    """DatasetConfigurationDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DatasetConfigurationDTO:
        """Test DatasetConfigurationDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DatasetConfigurationDTO`
        """
        model = DatasetConfigurationDTO()
        if include_optional:
            return DatasetConfigurationDTO(
                bm25_avg_len = 1.337,
                bm25_b = 1.337,
                bm25_enabled = True,
                bm25_k = 1.337,
                distance_metric = 'euclidean',
                embedding_base_url = '',
                embedding_model_name = '',
                embedding_query_prefix = '',
                embedding_size = 0,
                frequency_penalty = 1.337,
                fulltext_enabled = True,
                indexed_only = True,
                llm_base_url = '',
                llm_default_model = '',
                locked = True,
                max_limit = 0,
                max_tokens = 0,
                message_to_query_prompt = '',
                n_retrievals_to_include = 0,
                presence_penalty = 1.337,
                rag_prompt = '',
                reranker_base_url = '',
                semantic_enabled = True,
                stop_tokens = [
                    ''
                    ],
                system_prompt = '',
                temperature = 1.337,
                use_message_to_query_prompt = True,
                task_definition = ''
            )
        else:
            return DatasetConfigurationDTO(
        )
        """

    def testDatasetConfigurationDTO(self):
        """Test DatasetConfigurationDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
