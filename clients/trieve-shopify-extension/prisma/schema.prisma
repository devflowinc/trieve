// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model ApiKey {
  id               String            @id @default(uuid())
  organizationId   String            @default("")
  currentDatasetId String?           @db.Uuid
  shop             String            @unique @default("")
  key              String
  createdAt        DateTime          @default(now())
  JudgeOAuthState  JudgeOAuthState[]
  JudgeMeKeys      JudgeMeKeys[]
}

model CrawlSettings {
  id            String   @id @default(uuid())
  datasetId     String?  @db.Uuid
  shop          String   @default("")
  crawlSettings Json
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@unique([datasetId, shop], name: "datasetId_shop")
}

model JudgeOAuthState {
  id       String @id @default(uuid())
  apiKey   ApiKey @relation(fields: [apiKeyId], references: [id])
  apiKeyId String
  code     String @unique
}

model JudgeMeKeys {
  id             String   @id @default(uuid())
  apiKey         ApiKey   @relation(fields: [trieveApiKeyId], references: [id])
  trieveApiKeyId String
  authKey        String
  createdAt      DateTime @default(now())
}
