<link
  rel="stylesheet"
  href="https://cdn.trieve.ai/beta/search-component/index.css"
>

<div class="trieve-inline-root"></div>

<script type="module">
  import {renderToDiv} from 'https://cdn.trieve.ai/beta/search-component/vanilla/index.js';
  import {addToCart, checkCartQuantity} from '{{'cart-manager.js' | asset_url}}';

  const inlineRoot = document.querySelector(".trieve-inline-root");
  const appMetafieldTrieve = {{ app.metafields.trieve | json }};
  const blockSettings = {{ block.settings | json }};
  const productId = {{ product.id | json }};
  const productTitle = {{ product.title | json }};
  const productMetafieldsTrieve = {{ product.metafields.trieve | json }};
  let trievePDPQuestions = null;
  if (productMetafieldsTrieve && Object.keys(productMetafieldsTrieve).includes("trievePDPQuestions")) {
    trievePDPQuestions = productMetafieldsTrieve.trievePDPQuestions;
  }
  let defaultAiQuestions = {{ block.settings.default_ai_questions | json }};
  if (defaultAiQuestions && typeof defaultAiQuestions === "string") {
    defaultAiQuestions = defaultAiQuestions.split(",").map((question) => question.trim());
  } else {
    defaultAiQuestions = null;
  }
  if (trievePDPQuestions && trievePDPQuestions.length > 0) {
    defaultAiQuestions = trievePDPQuestions.map((question) => question.text);
  }

  const toBool = (value) => value === 'true' || value === true;
  const getValue = (value, defaultValue) => {
    if (value === null || value === undefined || value === '') {
      return defaultValue;
    }
    return value;
  };

  if (!appMetafieldTrieve.dataset_id || !appMetafieldTrieve.api_key) {
    console.error("Trieve: Cannot render inline Trieve comopnent due to missing dataset_id or api_key in the app metafields");
  } else {
    renderToDiv(inlineRoot, {
      type: "ecommerce",
      baseUrl: "https://api.trieve.ai",
      useGroupSearch: true,
      scaleRem: true,
      hideOpenButton: true,
      apiKey: appMetafieldTrieve.api_key,
      datasetId: appMetafieldTrieve.dataset_id,
      zIndex: Number(getValue(appMetafieldTrieve.z_index, 2147483645)),
      defaultAiQuestions,
      brandColor: getValue("{{ block.settings.brand_color }}", ""),
      chatPlaceholder: getValue("{{ block.settings.chat_placeholder }}", "Ask anything..."),
      suggestedQueries: toBool(getValue("{{ block.settings.suggested_queries }}", true)),
      followupQuestions: toBool(getValue("{{ block.settings.suggested_queries }}", true)),
      numberOfSuggestions: Number(getValue("{{ block.settings.number_of_suggestions }}", 3)),
      openLinksInNewTab: toBool(getValue("{{ block.settings.open_links_new_tab }}", true)),
      theme: getValue("{{ block.settings.theme }}", "light"),
      onAddToCart: (chunk) => {
        addToCart(parseInt(chunk.tracking_id))
      },
      getCartQuantity: (trackingId) => {
        return checkCartQuantity(parseInt(trackingId));
      },
      {% comment %} not on global {% endcomment %}
      inlineHeader: "",
      inline: true,
      groupTrackingId: productId ? productId.toString() : undefined,
      cleanGroupName: productTitle ?? undefined,
    });
  }
</script>

{% comment %}
  see more about the schema section here. https://shopify.dev/docs/storefronts/themes/architecture/sections/section-schema#schema

  If the input is not valid json, it will not work
{% endcomment %}
{% schema %}
{
  "name": "Trieve Product Chat",
  "target": "section",
  "settings": [
    {
      "type": "select",
      "id": "theme",
      "label": "Theme",
      "options": [
        { "label": "Light", "value": "light" },
        { "label": "Dark", "value": "dark" }
      ],
      "default": "light"
    },
    {
      "type": "color",
      "id": "brand_color",
      "label": "Brand Color",
      "default": "#ff0000"
    },
    {
      "type": "text",
      "id": "chat_placeholder",
      "label": "Input Placeholder Text",
      "default": "Ask anything..."
    },
    {
      "type": "checkbox",
      "id": "open_links_new_tab",
      "label": "Open Links in New Tab",
      "default": true
    },
    {
      "id": "default_ai_questions",
      "type": "textarea",
      "label": "Initial Questions (Separated by commas)",
      "placeholder": "What is this made of?"
    }
  ]
}
{% endschema %}
